#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

indent() {
    echo "       $*" || true
}

export_env_dir() {
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$ENV_DIR" ]; then
    for e in $(ls $ENV_DIR); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $ENV_DIR/$e)"
      :
    done
  fi
}

VENDOR_DIR=$BUILD_DIR/vendor
ORACLE_DIR=$VENDOR_DIR/oracle
INSTANTCLIENT_DIR=$ORACLE_DIR/instantclient_12_1
PROFILE_D_DIR=$BUILD_DIR/.profile.d

BASIC_FILENAME=instantclient-basic-linux.x64-12.1.0.2.0.zip
SDK_FILENAME=instantclient-sdk-linux.x64-12.1.0.2.0.zip

export_env_dir

echo "Client file located at $MIRROR_CLIENT"
echo "SDK file located at $MIRROR_SDK"

MIRROR=$MIRROR

if [ ! -f $CACHE_DIR/$BASIC_FILENAME ]; then
    indent "Downloading $BASIC_FILENAME..."
    curl -L -o $CACHE_DIR/$BASIC_FILENAME $MIRROR_CLIENT
fi

if [ ! -f $CACHE_DIR/$SDK_FILENAME ]; then
    indent "Downloading $SDK_FILENAME..."
    curl -L -o $CACHE_DIR/$SDK_FILENAME $MIRROR_SDK
fi

mkdir -p $ORACLE_DIR
indent "Extracting $BASIC_FILENAME..."
unzip -qq $BUILD_DIR/$BASIC_FILENAME -d $ORACLE_DIR
indent "Extracting $SDK_FILENAME..."
unzip -qq $BUILD_DIR/$SDK_FILENAME -d $ORACLE_DIR

indent "Symlinking libclntsh.so..."
ln -s libclntsh.so.12.1 $INSTANTCLIENT_DIR/libclntsh.so

export OCI_LIB_DIR=$INSTANTCLIENT_DIR
export OCI_INC_DIR=$INSTANTCLIENT_DIR/sdk/include

indent "Installing oracledb from npm..."
THIS_DIR=`pwd`
cd $BUILD_DIR
npm install oracledb
cd $THIS_DIR

indent "Saving environment setup script..."
mkdir -p $PROFILE_D_DIR
cat << EOF > $PROFILE_D_DIR/oracle.sh
#!/usr/bin/env bash
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:$HOME/.apt/lib/x86_64-linux-gnu:$HOME/vendor/oracle/instantclient_12_1"
EOF

indent "Done."
